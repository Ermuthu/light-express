<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<title>Title</title>
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black" />
<meta name="format-detection" content="telephone=no" />
<meta name="author" content="" />
<meta name="revisit-after" content="1 days" />
<meta name="keywords" content="" />
<meta name="description" content="" />
<link rel="stylesheet" type="text/css" href="../../../../public/css/base.css?<%- __version__ %>" />
<link rel="stylesheet" type="text/css" href="../../../../ui/css/reload.css?<%- __version__ %>" />
</head>
<body>
<div class="page">
	<header class="header">
		<a class="action-left arrow-left" href=""></a>
		<span>test</span>
		<a class="action-right" href="">测试</a>
	</header>
	<section class="wrapper">
		<div class="scroller">
			<label>
				<input class="checkbox" type="checkbox">
				<span class="label">点击选择</span>
			</label>
			<ul>
				<% for(let i=0; i<100; i++){ %>
				<li><%- String(i).repeat(30) %></li>
				<% } %>
			</ul>
		</div>
	</section>
	<footer class="footer btn-group">
		<span class="btn-cancel">Cancel</span>
		<span class="btn-submit">Ok</span>
	</footer>
</div>
<script id="requirejs" data-version="<%- __version__ %>" src="../../../../public/js/require.js?<%- __version__ %>"></script>
<script>
// requestAnimationFrame {{{
(function() {
	'use strict';
	var vendors = ['webkit', 'moz'];
	for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {
		var vp = vendors[i];
		window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];
		window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']
			|| window[vp+'CancelRequestAnimationFrame']);
	}
	if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) // iOS6 is buggy
	|| !window.requestAnimationFrame || !window.cancelAnimationFrame) {
		var lastTime = 0;
		window.requestAnimationFrame = function(callback) {
			var now = Date.now();
			var nextTime = Math.max(lastTime + 16, now);
			return setTimeout(function() { callback(lastTime = nextTime); }, nextTime - now);
		};
		window.cancelAnimationFrame = clearTimeout;
	}
}());
// }}}
require.config({
	baseUrl:'../../../../',
	urlArgs:document.getElementById("requirejs").getAttribute("data-version"),
	map:{"*":{css:"require-css"}},
	paths:{
		jquery:'public/js/jquery',
		IScroll:'public/js/iscroll-probe'
	},
	shim:{
	}
});
require(['jquery', 'IScroll'],function($, IScroll){
	/* return false; */
	function init_iscroll(selector){
		return new IScroll(selector, {
			top:true,
			probeType:3,
			mouseWheel:true,
			scrollbars:true,
			fadeScrollbars:true,
			deceleration:0.0025,
			interactiveScrollbars: true,
			shrinkScrollbars: 'scale',
			preventDefaultException : {
				tagName:/^(INPUT|TEXTAREA|SELECT|LABEL|A|IMG)$/,
				className:/(^|\s)(label|clickable)(\s|$)/
			}
		});
	}
	var myScroll = init_iscroll('.wrapper');
	console.log(myScroll);
	var $scroller = $(myScroll.wrapper.children[0]);
	var $loadMore = $('<div class="load-more"><span class="icon-loading"></span></div>');
	$scroller.append($loadMore)
	var over_height = 0;
	var loading_limit = 50;
	var recover_time = 200;
	myScroll.on('scroll', function(){//{{{
		var that = this;
		var scroll_timer = this._scroll_timer;
		scroll_timer && cancelAnimationFrame(scroll_timer);
		this._scroll_timer = requestAnimationFrame(function(){
			over_height = -that.y + that.wrapperHeight - that.scrollerHeight;
			if(over_height>=loading_limit){
				$loadMore.addClass('state-preloading');
			}else{
				$loadMore.removeClass('state-preloading');
			}
		});
	});//}}}
	function refresh_page(iscroll){/*{{{*/
		var refresh_timer = iscroll._refresh_timer;
		refresh_timer && cancelAnimationFrame(refresh_timer);
		iscroll._refresh_timer = requestAnimationFrame(function(){
			iscroll.refresh();
		});
	}/*}}}*/
	function recover_loading_stage(iscroll){//{{{
		iscroll.maxScrollY += loading_limit;
		iscroll.resetPosition(recover_time);
		$loadMore.removeClass('state-preloading state-loading');
		/* setTimeout(function(){ */
		/* 	refresh_page(iscroll); */
		/* }, recover_time); */
	}//}}}

	$scroller.get(0).addEventListener('touchend', function(){//{{{
		if(over_height>loading_limit){
			myScroll.maxScrollY -= loading_limit;
			$loadMore.removeClass('state-preloading').addClass('state-loading');
			setTimeout(function(data){
				recover_loading_stage(myScroll);
			}, 1200);
		}
	}, false);//}}}
});
</script>
</body>
</html>
