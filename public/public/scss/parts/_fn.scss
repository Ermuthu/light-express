@charset "utf-8"; //解决中文报错
$is_modern:1 !default; // 兼容低版本ie

$color_default  :#666 !default;
$color_dark     :#333 !default;
$color_light    :#999 !default;
$color_blue     :blue !default;
$color_red      :red  !default;
$color_green    :green !default;
$color_bg_light :#eee !default;

@import "flex";

// css3 -webkit-,-moz-,-ms-,-o- 的前缀简写
// 第一个参数为属性和值，第二个参数则是前缀
// @mixin prefix($map, $vendors:webkit moz ms o){
@mixin prefix($map, $vendors:webkit){
	@each $prop, $value in $map{
		@if $vendors {
			@each $vendor in $vendors {
				#{'-' + $vendor + '-' + $prop}:#{$value};
			}
		}
		// Dump regular property anyway
		#{$prop}:#{$value};
	}
}
// sass:
// .lits{
// 	@include prefix((transform:rotate(0deg),transition:all .2s ease-out));
// }
// .test{
// 	@include prefix((transition:#{top 1s,transform 1s,left 1s}));
// }
// .element {
// 	@include prefix((transform: translate(-50%, -50%)), webkit ms);
// }
// Ouput:
// .test {
// 	-webkit-transition: top 1s, transform 1s, left 1s;
// 	-moz-transition: top 1s, transform 1s, left 1s;
// 	-ms-transition: top 1s, transform 1s, left 1s;
// 	-o-transition: top 1s, transform 1s, left 1s;
// 	transition: top 1s, transform 1s, left 1s;
// }
// .element {
// 	-webkit-transform: translate(-50%, -50%);
// 	-ms-transform: translate(-50%, -50%);
// 	transform: translate(-50%, -50%);
// }
@mixin keyframes($name){
	// @-moz-keyframes #{$name}{@content}
	// @-o-keyframes #{$name}{@content}
	// @-ms-keyframes #{$name}{@content}
	@-webkit-keyframes #{$name}{@content}
	@keyframes #{$name}{@content}
}
// @include keyframes(donghua){
// 	0%{margin-top:0;}
// 	25%{margin-top:-10px;}
// 	50%{margin-top:-20px;}
// 	75%{margin-top:-10px;}
// 	100%{margin-top:0;}
// }

@mixin cf(){
	@if($is_modern==0){
		*zoom:1;
	}
	&:before,&:after{content:"";display:table;}
	&:after{clear:both;overflow:hidden;}
}

// inline-block
@mixin inline-block($vertical-align:middle){
	display:inline-block;
	@if($is_modern==0){
		*display:inline;*zoom:1;
	}
	vertical-align:$vertical-align;//*vertical-align:auto;
}
@mixin ib($valign:middle){
	@include inline-block($valign);
}

// 通用居中样式
// 使用见_layout.scss
@mixin imge($vertical-align:middle){
	@include inline-block($vertical-align);font-size:12px;font-size:1rem;line-height:normal;
}
@mixin imgc($is_image:1, $selecor:img, $align:center, $verticalAlign:middle){
	font-size:0;
	@if($align!=left){
		text-align:$align;
	}
	@if($is_modern==0){
		&:before,.iecp{@include ib($verticalAlign);}
		&:before,.iecp{content:"";height:100%;font-size:0;line-height:0;width:0;}
	}@else{
		&:before{@include ib($verticalAlign);}
		&:before,{content:"";height:100%;font-size:0;line-height:0;width:0;}
	}
	#{$selecor}{
		@include ib($verticalAlign);
		@if($is_image==1){
			max-width:100%;max-height:100%; //大图片等比缩小至父元素大小
		}@elseif($selecor!=img){
			font-size:12px;font-size:1rem;line-height:normal;
		}
	}
}
// $is_modern:1;
// .test{@include imgc;}

// 单行溢出省略
@mixin sln(){white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}

// webkit多行溢出省略
@mixin mln($line:2){
	overflow:hidden;text-overflow:ellipsis;
	display:-webkit-box;-webkit-box-orient:vertical;
	-webkit-line-clamp:$line;
}

%cf{@include cf();}
%inline-block{@include inline-block;}
%ib{@include inline-block;}
%imge{@include imge();}
%imgc{@include imgc();}
%sln{@include sln();}
%mln{@include mln;}

// .test{@extend %inline-block;}

@mixin opacity($val:0.5){
	opacity:$val;
	filter:alpha(opacity=$val*100);
}

// @param
// $color - 普通的十六进制颜色值 #123456
// $alpha - 透明度0 ~ 1
@mixin background-color-rgba($color, $alpha){
	$rgba:rgba($color,$alpha);
	$ie-hex-str:ie-hex-str($rgba);
	background-color:$rgba;
	@if($is_modern==0){
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
		@media screen and (min-width:0px){filter:none;}
	}
}

@mixin size($width:auto, $height:$width){width:$width;height:$height;}
@mixin user-select($val){@include prefix((user-select:$val),webkit moz ms);}
@mixin box-sizing($mode:content-box){@include prefix((box-sizing:$mode),webkit moz);}
@mixin border-radius($n:0){@include prefix((border-radius:$n),webkit moz);}
// @include border-radius(3px);

@mixin border-top-left-radius($n:0){@include prefix((border-top-left-radius:$n),webkit moz);}
@mixin border-top-right-radius($n:0){@include prefix((border-top-right-radius:$n),webkit moz);}
@mixin border-bottom-left-radius($n:0){@include prefix((border-bottom-left-radius:$n),webkit moz);}
@mixin border-bottom-right-radius($n:0){@include prefix((border-bottom-right-radius:$n),webkit moz);}
@mixin background-circle($size, $color, $empty:null, $emptyColor:white, $borderWidth:1px){
	&{
		@include size($size);
		@include relative(null,1);
		text-align:center;
		// *overflow:hidden;
	}
	// &:before,.iecp{
	&:before{
		content:"";//*content:normal;
		@include absolute(left 0 top 0, -2);
		// *width:$size;*height:$size;
		border-left:$size dotted $color;
		border-top:$size dotted $color;
		// *border-right:$size dotted $color;
	}
	@if($empty){
		&:after{
			content:"";//*content:normal;
			@include absolute(left $borderWidth top $borderWidth, -1);
			// *width:$size;*height:$size;
			border-left:($size - $borderWidth*2) dotted $emptyColor;
			border-top:($size - $borderWidth*2) dotted $emptyColor;
			// *border-right:$size dotted $color;
		}
	}
	@media screen and(min-width:0px){
		&{
			border-radius:50%;
			@if($empty){
				border:$borderWidth solid $color;
				background:$emptyColor;
			}@else{
				background:$color;
			}
		}
		// #{&}:before#{&} .iecp{content:normal;}
		&:before,&:after{content:normal;}
	}
}

// position
// 使用：@include relative(top 1px left 1px)--->position:relative;left:1px;top:1px;
@mixin position($position, $args, $index:null){
	position:unquote($position);
	@each $o in top right bottom left {
		$i: index($args, $o);
		@if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
			#{$o}: nth($args, $i + 1);
		}
	}
	@if($index){
		z-index:$index;
	}
}
@mixin absolute($args:null, $index:null){@include position("absolute", $args, $index);}
@mixin fixed($args:null, $index:null){@include position("fixed", $args, $index);}
@mixin relative($args:null, $index:null){@include position("relative", $args, $index);}
// 例：
// sass
// .element {
// 	@include absolute(top 0 left 1em);
// }
// Ouput
// .element {
// 	position: absolute;
// 	top: 0;
// 	left: 1em;
// }

@include keyframes(radioOut){
	0%{@include prefix((transform:scale(0)),webkit);@include opacity(1);}
	70%{@include prefix((transform:scale(2)),webkit);@include opacity(0.5);}
	90%{@include prefix((transform:scale(2.5)),webkit);@include opacity(0.1);}
	100%{@include prefix((transform:scale(0)),webkit);@include opacity(0);}
}
@mixin button($width, $height, $bgcolor:transparent, $hover:1,$active:1, $animation:null){
	@include box-sizing(border-box);
	@include ib;@include size($width, $height);@include user-select(none);
	font:14px/#{$height} "Microsoft YaHei";border:none;
	@include border-radius(3px);color:invert($bgcolor);
	text-align:center;background:$bgcolor;cursor:pointer;text-decoration:none;
	@if($hover){
		&:hover{background-color:lighten($bgcolor,5%);}
	}
	@if($active){
		@if($animation){
			@include relative;//overflow:hidden;
			&:before{
				content:'';
				@include absolute(left 0 right 0 bottom 0 top 0,-1);
				@include prefix((transform:scale(0)));
				@include border-radius(100%);//background-color:darken($bgcolor,6%);
				@include prefix((transform:scale(0)));
				// @include prefix((transition:transform 0s ease-out));
			}
		}
		&:active{
			outline:thin dotted;outline-offset:-2px;
			@if($animation){
				background-color:darken($bgcolor,5%);
				@include prefix((transform:translateZ(0)));
				&:before{
					background-image:radial-gradient(darken($bgcolor,25%),transparent 99%);;
					@include prefix((animation:radioOut 0.2s ease-out 0s 1 normal),webkit);
					// @include prefix((animation-fill-mode:forwards),webkit);
					// @include prefix((transition:transform 0.35s ease-out));
					// @include prefix((transform:scale(2)));
				}
			}@else{
				background-color:darken($bgcolor,5%);
			}
		}
	}
}

@mixin placeholder{
	&::-webkit-input-placeholder{@content} // Chrome, Safari, Opera
	&:-moz-placeholder{@content} // Mozilla Firefox 4-18使用伪类
	&::-moz-placeholder{@content} // Firefox 19+
	&:-ms-input-placeholder{@content} // IE 10+
}

// Returns the opposite direction of each direction in a list
// @author Hugo Giraudel
// @param {List} $directions - List of initial directions
// @return {List} - List of opposite directions
@function opposite-direction($directions) {
	$opposite-directions:();
	$direction-map:(
		'top'    : 'bottom',
		'right'  : 'left',
		'bottom' : 'top',
		'left'   : 'right',
		'center' : 'center',
		'ltr'    : 'rtl',
		'rtl'    : 'ltr'
	);
	@each $direction in $directions {
		$direction: to-lower-case($direction);
		@if map-has-key($direction-map, $direction) {
			$opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));
		} @else {
			@warn "No opposite direction can be found for `#{$direction}`. Direction omitted.";
		}
	}
	@return $opposite-directions;
}
// 例：scss
// .selector {
//   background-position: opposite-direction(top right);
// }
// css
// .selector {
//   background-position: bottom left;
// }

//生成 三角
@mixin triangle($direction, $position, $color:currentcolor, $size:1em) {
	$direction: if(function-exists("to-lower-case") == true, to-lower-case($direction), $direction);
	@if not index(top right bottom left, $direction) {
		@warn "Direction must be one of `top`, `right`, `bottom` or `left`; currently `#{$direction}`.";
	} @else {
		// Core stuff
		@include absolute($position);@include size(0);
		border-#{opposite-direction($direction)}: $size solid $color;
		$perpendicular-border: $size solid transparent;
		@if $direction == top or $direction == bottom {
			border-left:   $perpendicular-border;
			border-right:  $perpendicular-border;
		} @else if $direction == right or $direction == left {
			border-bottom: $perpendicular-border;
			border-top:    $perpendicular-border;
		}
	}
}

// 列：scss
// .selector{@include triangle(right,top 5px right -5px,#EA3434,5px);}
// css
// .selector {
// 	top: 5px;
// 	right: -5px;
// 	position: absolute;
// 	width: 0;
// 	height: 0;
// 	border-left: 5px solid #EA3434;
// 	border-bottom: 5px solid transparent;
// 	border-top: 5px solid transparent
// }

@mixin toolTip($direction, $position, $arrSize, $bgColor:white, $borderColor:black, $innerClass:'tool-tip-inner'){
	$dirMap : ('top':'bottom', 'right':'left', 'bottom':'top', 'left':'right');
	$od     : map-get($dirMap, $direction);// 反方向
	$n      : 1;
	@if index(right bottom, $direction){
		$n:2;
	}
	padding-#{$direction}:nth($arrSize, $n);// padding使用相应宽/高的值，使可以hover到tip上显示
	.#{$innerClass}{
		position:relative;padding:5px;background:$bgColor;border-radius:8px;border:1px solid $borderColor;
		&:before,&:after,.before,.after{
			@include absolute($position);@include size(0);content:'';
			border-style:solid;border-color:transparent;
			border-#{$od}:nth($arrSize,1) solid $borderColor;
			@if index(top bottom, $direction){
				border-left-width  : nth($arrSize,1);
				border-right-width : nth($arrSize,2);
			}@else if index(left right, $direction){
				border-top-width    : nth($arrSize,1);
				border-bottom-width : nth($arrSize,2);
			}
		}
		&:after,.after{
			@include absolute($direction nth($position, index($position, $direction)+1)+1);
			border-#{$od}-color:$bgColor;
		}
	}
}
// .tip{
// 	@include ib;width:100px;margin-top:15px;margin-right:15px;
// 	word-break:break-line;word-wrap:break-word;
// 	@include relative(top 10px left 14px);
// 	line-height:16px;color:#ff8144;
// 	.tip-content{padding:15px;}
// 	@include tip-box(top, left 13px top -13px, 10px 10px);
// }

@mixin stateList($height           : 30px,
                 $radius           : 3px,
                 $width            : 2px,
				 $left             : $height/2,
                 $style            : solid,
                 $color            : #999,
                 $stateActiveClass : 'state-active',
                 $activeColor      : red,
                 $growing          : 0,
				 $hoverActive      : 0,
                 $shadow           : 5px,
                 $shadowColor      : currentcolor){
	li{
		@include relative;margin-left:$left+$radius*2;height:$height;
		line-height:$height;list-style:none;
		&:before{
			@include absolute(left (-$left) top (-$height/2));
			content:'';height:$height;border-left:$width $style $color;
		}
		&:first-child:before{display:none;}
		&:after{
			@include absolute(left (-$left - $radius + $width/2) top ($height/2)-$radius);
			@include border-radius(50%);box-shadow:0 0 $shadow $shadowColor;
			z-index:1;content:'';border:$radius $style $color;
		}
		&.#{$stateActiveClass}{
			color:$activeColor;
			$borderColor:$color;
			@if(1==$growing){
				$borderColor:$activeColor
			}
			&:before{border-color:$borderColor;}
			&:after{border-color:$activeColor;box-shadow:0 0 $shadow $activeColor;}
		}
		@if(1==$hoverActive){
			&:hover{@extend .#{$stateActiveClass}}
		}
	}
}

@mixin stateStep($width:100%, $color:#ccc, $colorDone:#0dffaf){
    width:$width;padding:50px 150px 80px;margin:auto;
    .step-progress{position:relative;height:8px;background:$color;}
    .step-progress-done{@include absolute(left 0 top 0);height:8px;background:$colorDone;}
    .step-position{
        @include size(28px);@include absolute(top -10px);
        margin-left:-7px;font:18px/28px "Microsoft YaHei";text-align:center;color:white;
        @media screen and(min-width:0px){@include border-radius(50%);background-color:$color;}
        .step-arrow{
            display:block;@include size(0);margin-top:-22px;margin-left:-12px;
            border:12px solid $color;
			border-top:8px solid white;border-bottom:8px solid white;
			border-right:0px solid white;
            &.arrow-done{border-left-color:$colorDone;}
        }
        &.position-done{
            @media screen and(min-width:0px){background-color:$colorDone;}
            .step-arrow{border-left-color:$colorDone;}
        }
        &.first-position{
            .step-arrow{border-color:transparent;}
        }
        .step-label{font:12px/normal NSimSun;color:#999;margin-top:20px;width:500%;margin-left:-200%;}
    }
}
